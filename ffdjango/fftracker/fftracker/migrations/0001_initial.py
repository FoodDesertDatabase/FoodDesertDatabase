# Generated by Django 4.1.3 on 2023-07-13 19:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Households',
            fields=[
                ('hh_id', models.AutoField(primary_key=True, serialize=False)),
                ('hh_first_name', models.CharField(max_length=30)),
                ('hh_last_name', models.CharField(max_length=30)),
                ('num_adult', models.PositiveIntegerField(blank=True, null=True)),
                ('num_child_lt_6', models.PositiveIntegerField(blank=True, null=True)),
                ('num_child_gt_6', models.PositiveIntegerField(blank=True, null=True)),
                ('sms_flag', models.PositiveIntegerField(blank=True, null=True)),
                ('veg_flag', models.PositiveIntegerField(blank=True, null=True)),
                ('allergy_flag', models.PositiveIntegerField(blank=True, null=True)),
                ('gf_flag', models.PositiveIntegerField(blank=True, null=True)),
                ('ls_flag', models.PositiveIntegerField(blank=True, null=True)),
                ('paused_flag', models.PositiveIntegerField(blank=True, null=True)),
                ('paying', models.PositiveIntegerField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=12, null=True)),
                ('street', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('pcode', models.PositiveIntegerField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=2, null=True)),
                ('delivery_notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'households',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IngredientNames',
            fields=[
                ('ing_name_id', models.AutoField(primary_key=True, serialize=False)),
                ('ing_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'ingredient_names',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ingredients',
            fields=[
                ('i_id', models.AutoField(primary_key=True, serialize=False)),
                ('ingredient_name', models.CharField(max_length=50)),
                ('pkg_type', models.CharField(max_length=50)),
                ('storage_type', models.CharField(max_length=50)),
                ('in_date', models.DateField(blank=True, null=True)),
                ('in_qty', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, max_length=10, null=True)),
                ('exp_date', models.DateField(blank=True, null=True)),
                ('qty_on_hand', models.SmallIntegerField(blank=True, null=True)),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('flat_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
            ],
            options={
                'db_table': 'ingredients',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Kits',
            fields=[
                ('k_id', models.AutoField(primary_key=True, serialize=False)),
                ('k_date', models.DateField()),
                ('k_hh_id', models.ForeignKey(db_column='k_hh_id', on_delete=django.db.models.deletion.CASCADE, to='fftracker.households')),
            ],
            options={
                'db_table': 'kits',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MealPlans',
            fields=[
                ('m_id', models.AutoField(primary_key=True, serialize=False)),
                ('m_date', models.DateField()),
                ('snack_servings', models.SmallIntegerField(blank=True, null=True)),
                ('meal_servings', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'meal_plans',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Packaging',
            fields=[
                ('p_id', models.AutoField(primary_key=True, serialize=False)),
                ('package_type', models.CharField(max_length=50)),
                ('unit_qty', models.SmallIntegerField(blank=True, null=True)),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('qty_holds', models.SmallIntegerField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, max_length=10, null=True)),
                ('returnable', models.IntegerField(blank=True, null=True)),
                ('in_date', models.DateField(blank=True, null=True)),
                ('in_qty', models.SmallIntegerField(blank=True, null=True)),
                ('exp_date', models.DateField(blank=True, null=True)),
                ('qty_on_hand', models.SmallIntegerField(blank=True, null=True)),
                ('flat_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
            ],
            options={
                'db_table': 'packaging',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Recipes',
            fields=[
                ('r_num', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('r_name', models.CharField(blank=True, max_length=50, null=True)),
                ('r_img_path', models.CharField(blank=True, max_length=200, null=True)),
                ('r_card_path', models.CharField(blank=True, max_length=200, null=True)),
                ('m_s', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'recipes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('s_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('s_name', models.CharField(max_length=50)),
                ('street', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('pcode', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'supplier',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('u_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=260)),
                ('admin_flag', models.PositiveIntegerField()),
                ('email', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServingCalculations',
            fields=[
                ('calc_meal_plan', models.OneToOneField(db_column='calc_meal_plan_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='fftracker.mealplans')),
                ('calc_date', models.DateField()),
            ],
            options={
                'db_table': 'serving_calculations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Stations',
            fields=[
                ('stn_num', models.IntegerField(primary_key=True, serialize=False)),
                ('stn_name', models.CharField(blank=True, max_length=50)),
                ('stn_desc', models.TextField(blank=True)),
                ('stn_recipe_num', models.ForeignKey(db_column='stn_recipe_num', on_delete=django.db.models.deletion.CASCADE, related_name='r_stations', to='fftracker.recipes')),
            ],
            options={
                'db_table': 'stations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StationPackaging',
            fields=[
                ('sp_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('sp_pkg', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='fftracker.packaging')),
            ],
            options={
                'db_table': 'station_packaging',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StationIngredients',
            fields=[
                ('si_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('si_ing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='fftracker.ingredients')),
            ],
            options={
                'db_table': 'station_ingredients',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecipePackaging',
            fields=[
                ('rp_id', models.IntegerField(primary_key=True, serialize=False)),
                ('amt', models.SmallIntegerField(blank=True, null=True)),
                ('pkg_type', models.CharField(max_length=45)),
                ('pkg_contents', models.CharField(max_length=255)),
                ('ing_name', models.CharField(blank=True, max_length=45, null=True)),
                ('rp_ing_id', models.SmallIntegerField(blank=True, null=True)),
                ('rp_pkg', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='fftracker.packaging')),
                ('rp_recipe_num', models.ForeignKey(blank=True, db_column='rp_recipe_num', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='r_packaging', to='fftracker.recipes')),
            ],
            options={
                'db_table': 'recipe_packaging',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecipeInstructions',
            fields=[
                ('inst_id', models.IntegerField(primary_key=True, serialize=False)),
                ('step_no', models.IntegerField(blank=True, null=True)),
                ('step_inst', models.TextField(blank=True, null=True)),
                ('stn_name', models.CharField(blank=True, max_length=50, null=True)),
                ('inst_recipe_num', models.ForeignKey(blank=True, db_column='inst_recipe_num', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='r_instructions', to='fftracker.recipes')),
            ],
            options={
                'db_table': 'recipe_instructions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredients',
            fields=[
                ('ri_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('ingredient_name', models.CharField(max_length=100)),
                ('amt', models.DecimalField(decimal_places=2, max_digits=5)),
                ('unit', models.CharField(max_length=10)),
                ('prep', models.CharField(max_length=100)),
                ('ri_recipe_num', models.ForeignKey(db_column='ri_recipe_num', on_delete=django.db.models.deletion.CASCADE, related_name='r_ingredients', to='fftracker.recipes')),
            ],
            options={
                'db_table': 'recipe_ingredients',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecipeDiets',
            fields=[
                ('rd_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('diet_category', models.CharField(max_length=50)),
                ('rd_recipe_num', models.ForeignKey(db_column='rd_recipe_num', on_delete=django.db.models.deletion.CASCADE, related_name='r_diets', to='fftracker.recipes')),
            ],
            options={
                'db_table': 'recipe_diets',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecipeAllergies',
            fields=[
                ('ra_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('allergy', models.CharField(max_length=30)),
                ('ra_recipe_num', models.ForeignKey(db_column='ra_recipe_num', on_delete=django.db.models.deletion.CASCADE, related_name='r_allergies', to='fftracker.recipes')),
            ],
            options={
                'db_table': 'recipe_allergies',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='packaging',
            name='pref_psupplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pref_psupplier', to='fftracker.supplier'),
        ),
        migrations.AddField(
            model_name='packaging',
            name='psupplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='psupplier', to='fftracker.supplier'),
        ),
        migrations.AddField(
            model_name='mealplans',
            name='meal_r_num',
            field=models.ForeignKey(blank=True, db_column='meal_r_num', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meal', to='fftracker.recipes'),
        ),
        migrations.AddField(
            model_name='mealplans',
            name='snack_r_num',
            field=models.ForeignKey(blank=True, db_column='snack_r_num', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='snack', to='fftracker.recipes'),
        ),
        migrations.CreateModel(
            name='MealPacks',
            fields=[
                ('mp_id', models.AutoField(primary_key=True, serialize=False)),
                ('mp_date', models.DateField()),
                ('mp_hh_id', models.ForeignKey(db_column='mp_hh_id', on_delete=django.db.models.deletion.CASCADE, to='fftracker.households')),
                ('mp_kit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fftracker.kits')),
                ('mp_stn_name', models.ForeignKey(db_column='mp_stn_name', on_delete=django.db.models.deletion.CASCADE, to='fftracker.stations')),
            ],
            options={
                'db_table': 'meal_packs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='KitPackaging',
            fields=[
                ('kp_id', models.IntegerField(primary_key=True, serialize=False)),
                ('kp_p_id', models.CharField(max_length=50)),
                ('qty', models.SmallIntegerField()),
                ('kp_kit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fftracker.kits')),
            ],
            options={
                'db_table': 'kit_packaging',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IngredientUsages',
            fields=[
                ('i_usage_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('used_date', models.CharField(max_length=45)),
                ('used_qty', models.CharField(max_length=45)),
                ('used_ing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredient_usage', to='fftracker.ingredients')),
            ],
            options={
                'db_table': 'ingredient_usages',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IngredientUnits',
            fields=[
                ('i_unit_id', models.AutoField(primary_key=True, serialize=False)),
                ('recipe_amt', models.CharField(max_length=45)),
                ('shop_amt', models.DecimalField(decimal_places=2, max_digits=4)),
                ('shop_unit', models.CharField(max_length=45)),
                ('i_name_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredient_name', to='fftracker.ingredientnames')),
            ],
            options={
                'db_table': 'ingredient_units',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='ingredients',
            name='isupplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='isupplier', to='fftracker.supplier'),
        ),
        migrations.AddField(
            model_name='ingredients',
            name='pref_isupplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pref_isupplier', to='fftracker.supplier'),
        ),
        migrations.CreateModel(
            name='HhKits',
            fields=[
                ('hk_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('hk_hh_id', models.ForeignKey(blank=True, db_column='hk_hh_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hh_kit', to='fftracker.households')),
                ('hk_kit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='fftracker.kits')),
            ],
            options={
                'db_table': 'hh_kits',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HhAllergies',
            fields=[
                ('hh_a_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('a_type', models.CharField(blank=True, max_length=30, null=True)),
                ('a_code', models.IntegerField(blank=True, null=True)),
                ('a_hh_id', models.ForeignKey(db_column='a_hh_id', on_delete=django.db.models.deletion.CASCADE, related_name='hh_allergies', to='fftracker.households')),
            ],
            options={
                'db_table': 'hh_allergies',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('c_id', models.IntegerField(primary_key=True, serialize=False)),
                ('first', models.CharField(blank=True, max_length=50, null=True)),
                ('last', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('c_supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fftracker.supplier')),
            ],
            options={
                'db_table': 'contacts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PackagingUsages',
            fields=[
                ('p_usage_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('used_date', models.DateField()),
                ('used_qty', models.SmallIntegerField()),
                ('used_pkg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packaging_usage', to='fftracker.packaging')),
                ('used_s_c', models.ForeignKey(db_column='used_s_c_id', on_delete=django.db.models.deletion.CASCADE, to='fftracker.servingcalculations')),
            ],
            options={
                'db_table': 'packaging_usages',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='kits',
            name='k_s_c',
            field=models.OneToOneField(db_column='k_s_c_id', on_delete=django.db.models.deletion.CASCADE, to='fftracker.servingcalculations'),
        ),
        migrations.CreateModel(
            name='HhMealPlans',
            fields=[
                ('hh_m_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fftracker.mealplans')),
                ('meal_hh_id', models.ForeignKey(db_column='meal_hh_id', on_delete=django.db.models.deletion.CASCADE, related_name='hh_meal', to='fftracker.households')),
                ('hh_s_c', models.OneToOneField(db_column='hh_s_c_id', on_delete=django.db.models.deletion.CASCADE, to='fftracker.servingcalculations')),
            ],
            options={
                'db_table': 'hh_meal_plans',
                'managed': True,
            },
        ),
    ]
