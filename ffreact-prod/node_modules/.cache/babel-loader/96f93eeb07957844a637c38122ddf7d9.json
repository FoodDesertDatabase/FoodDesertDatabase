{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\mcnee\\\\OneDrive\\\\Desktop\\\\fft\\\\ffreact-prod\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\mcnee\\\\OneDrive\\\\Desktop\\\\fft\\\\ffreact-prod\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mcnee\\\\OneDrive\\\\Desktop\\\\fft\\\\ffreact-prod\\\\src\\\\Ingredients\\\\IngredientList.js\";\nimport React, { Fragment, useState, useEffect, Suspense } from 'react';\nimport axios from 'axios';\nimport IngredientForm from './IngredientForm.js';\nimport EditableIngredientRow from './EditableIngredientRow.js';\nimport IngredientRow from './IngredientRow.js';\nimport Error from '../Error.js';\nimport DisplayMessage from '../DisplayMessage.js';\nimport './IngredientList.css';\n\n// Ingredient List Component\nexport default function IngredientList() {\n  var _this = this;\n  var data = [{\n    i_id: 1,\n    ingredient_name: 'Lasagna Noodles',\n    pkg_type: 'DRY-BAG',\n    storage_type: 'N/A',\n    in_date: '11/20/22',\n    in_qty: 10,\n    unit: 'lbs',\n    exp_date: '11-20-24',\n    qty_on_hand: 10,\n    unit_cost: 0.75,\n    flat_fee: 0.00,\n    isupplier_name: 'Second Harvest Food Bank',\n    pref_isupplier_name: 'N/A',\n    usages: []\n  }, {\n    i_id: 2,\n    ingredient_name: 'Ground Beef',\n    pkg_type: 'FROZEN',\n    storage_type: 'N/A',\n    in_date: '11/11/22',\n    in_qty: 2,\n    unit: 'lbs',\n    exp_date: '12-7-22',\n    qty_on_hand: 2,\n    unit_cost: 0.75,\n    flat_fee: 0.00,\n    isupplier_name: 'Second Harvest Food Bank',\n    pref_isupplier_name: 'N/A',\n    usages: []\n  }, {\n    i_id: 3,\n    ingredient_name: 'Ground Beef',\n    pkg_type: 'FROZEN',\n    storage_type: 'N/A',\n    in_date: '11/20/22',\n    in_qty: 5,\n    unit: 'lbs',\n    exp_date: '12-7-22',\n    qty_on_hand: 5,\n    unit_cost: 0.75,\n    flat_fee: 0.00,\n    isupplier_name: 'Second Harvest Food Bank',\n    pref_isupplier_name: 'N/A',\n    usages: [{\n      i_usage_id: 1,\n      used_date: '11/29/22',\n      used_qty: 2\n    }]\n  }];\n  var _useState = useState(undefined),\n    _useState2 = _slicedToArray(_useState, 2),\n    ingredients = _useState2[0],\n    setIngredients = _useState2[1];\n  var _useState3 = useState(undefined),\n    _useState4 = _slicedToArray(_useState3, 2),\n    suppliers = _useState4[0],\n    setSuppliers = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    editIngredientID = _useState6[0],\n    setEditIngredientID = _useState6[1];\n  var _useState7 = useState({\n      i_id: null,\n      ingredient_name: \"\",\n      pkg_type: \"\",\n      storage_type: \"\",\n      in_date: null,\n      in_qty: null,\n      ingredient_usage: [],\n      qty_on_hand: null,\n      unit: \"\",\n      exp_date: null,\n      unit_cost: null,\n      flat_fee: null,\n      isupplier_id: null,\n      pref_isupplier_id: null\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    editFormData = _useState8[0],\n    setEditFormData = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    errorComponent = _useState10[0],\n    setErrorComponent = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    displayMsgComponent = _useState12[0],\n    setdisplayMsgComponent = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    loadingComponent = _useState14[0],\n    setLoadingComponent = _useState14[1];\n  var handleError = function handleError(errCode) {\n    if (errCode === 'DuplicateKey') {\n      setErrorComponent( /*#__PURE__*/React.createElement(Error, {\n        text: \"Ingredient ID already found!\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }));\n    } else if (errCode === 'empty') {\n      setErrorComponent( /*#__PURE__*/React.createElement(Error, {\n        text: \"There doesn't seem to be any data!\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }));\n    }\n  };\n  var clearError = function clearError() {\n    setErrorComponent(null);\n  };\n  useEffect(function () {\n    getDBIngredients();\n    getDBSuppliers();\n  }, []);\n  var getDBSuppliers = function getDBSuppliers() {\n    console.log(\"MAKING REQUEST TO DJANGO\");\n    axios({\n      method: \"GET\",\n      url: \"http://localhost:8000/api/suppliers\"\n    }).then(function (response) {\n      setSuppliers(response.data);\n    }).catch(function (error) {\n      if (error.response) {\n        console.log(error.response);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      }\n    });\n  };\n  var getDBIngredients = function getDBIngredients() {\n    console.log(\"MAKING REQUEST TO DJANGO\");\n    setLoadingComponent( /*#__PURE__*/React.createElement(Error, {\n      text: \"LOADING DATA...\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }));\n    axios({\n      method: \"GET\",\n      url: \"http://localhost:8000/api/ingredient-inventory\"\n    }).then(function (response) {\n      var ingData = response.data;\n      setIngredients(ingData);\n      setLoadingComponent(null);\n    }).catch(function (error) {\n      if (error.response) {\n        console.log(error.response);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      }\n    });\n  };\n  var postDBIngredients = function postDBIngredients() {\n    axios({\n      method: \"POST\",\n      url: \"/ingredients/\",\n      data: ingredients\n    }).then(function (response) {\n      getDBIngredients();\n    }).catch(function (error) {\n      if (error.response) {\n        console.log(error.response);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      }\n    });\n    setdisplayMsgComponent( /*#__PURE__*/React.createElement(DisplayMessage, {\n      msg: \"Submitting changes to database!\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 32\n      }\n    }));\n  };\n  var addIngredient = function addIngredient(ingredient) {\n    var lastID = ingredients[ingredients.length - 1]['i_id'];\n    ingredient['i_id'] = lastID + 1;\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8000/api/ingredient-inventory/\",\n      data: ingredient\n    }).then(function (response) {\n      getDBIngredients();\n    }).catch(function (error) {\n      if (error.response) {\n        console.log(error.response);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      }\n    });\n    clearError();\n    // Check to see if we already have a duplicate Ingredient Name\n    // if (!ingredients.find((ing) => ing.i_id === ing.i_id))\n    // {\n    //     let newIngredients = [...ingredients, ingredient];\n    //     setIngredients(newIngredients);\n    //     clearError();\n    // }\n    // else {\n    //     // If this ingredient is already in ingredients list, display error message\n    //     handleError('DuplicateKey');\n    // }\n  };\n\n  var deleteIngredient = function deleteIngredient(key) {\n    var ingID = ingredients[key]['i_id'];\n    axios({\n      method: \"DELETE\",\n      url: \"http://localhost:8000/api/ingredient-inventory/\" + ingID + '/'\n    }).then(function (response) {\n      getDBIngredients();\n    }).catch(function (error) {\n      if (error.response) {\n        console.log(error.response);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      }\n    });\n  };\n  var updateIngredient = function updateIngredient(key) {\n    var thisID = ingredients[key]['i_id'];\n    if (ingredients.find(function (ing) {\n      return ing.i_id === thisID;\n    })) {\n      setEditIngredientID(null);\n      axios({\n        method: \"PATCH\",\n        url: \"http://localhost:8000/api/ingredient-inventory/\" + thisID + '/',\n        data: editFormData\n      }).then(function (response) {\n        getDBIngredients();\n      }).catch(function (error) {\n        if (error.response) {\n          console.log(error.response);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        }\n      });\n    } else {\n      // If this Ingredient is already in ingredients list, display error message\n      handleError('DuplicateKey');\n    }\n  };\n  var handleEditFormChange = function handleEditFormChange(event) {\n    // Get the name and value of the changed field\n    var fieldName = event.target.getAttribute('name');\n    var fieldValue = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\n    // Create new Ingredient object before setting state\n    var newEditFormData = _objectSpread({}, editFormData);\n    newEditFormData[fieldName] = fieldValue;\n    // Set state with new ingredient object\n    setEditFormData(newEditFormData);\n  };\n  var updateEditForm = function updateEditForm(name, value) {\n    var newEditFormData = _objectSpread({}, editFormData);\n    newEditFormData[name] = value;\n    setEditFormData(newEditFormData);\n    console.log(editFormData);\n  };\n  var handleEditClick = function handleEditClick(key) {\n    setEditIngredientID(key);\n    setEditFormData(ingredients[key]);\n  };\n  var handleCancelClick = function handleCancelClick() {\n    setEditIngredientID(null);\n    setEditFormData(null);\n  };\n  if (ingredients === undefined || suppliers === undefined) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \"loading\");\n  }\n  // The HTML structure of this component\n  return (\n    /*#__PURE__*/\n    /* Fragment is an invisible tag that can be used to encapsulate multiple JSX elements without changing the HTML structure of the page */\n    React.createElement(\"div\", {\n      class: \"table-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"main-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }\n    }, \"Ingredient Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 25\n      }\n    }, \"Package Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 25\n      }\n    }, \"Storage Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 25\n      }\n    }, \"Date In\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 25\n      }\n    }, \"Qty In\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, \"Expiration Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }, \"Usages\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }, \"Qty On Hand\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }\n    }, \"Unit\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }, \"Unit Cost\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    }, \"Flat Fee\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    }, \"Supplier\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }\n    }, \"Preferred Supplier\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, ingredients.map(function (ingredient, key) {\n      var thisKey = key;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 29\n        }\n      },\n      // If this ingredient is the one to be edited, show an editable row instead\n      editIngredientID === thisKey ? /*#__PURE__*/React.createElement(EditableIngredientRow, {\n        thisKey: thisKey,\n        editFormData: editFormData,\n        suppliers: suppliers,\n        updateIngredient: updateIngredient,\n        handleEditFormChange: handleEditFormChange,\n        updateEditForm: updateEditForm,\n        handleCancelClick: handleCancelClick,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 35\n        }\n      }) : /*#__PURE__*/React.createElement(IngredientRow, {\n        thisKey: thisKey,\n        ingredient: ingredient,\n        deleteIngredient: deleteIngredient,\n        handleEditClick: handleEditClick,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 35\n        }\n      }));\n    }))), loadingComponent, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }, \"Add An Ingredient\"), /*#__PURE__*/React.createElement(IngredientForm, {\n      addIngredient: addIngredient,\n      suppliers: suppliers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: postDBIngredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }\n    }, \"Submit Changes\"), errorComponent, displayMsgComponent)\n  );\n}","map":{"version":3,"names":["React","Fragment","useState","useEffect","Suspense","axios","IngredientForm","EditableIngredientRow","IngredientRow","Error","DisplayMessage","IngredientList","data","i_id","ingredient_name","pkg_type","storage_type","in_date","in_qty","unit","exp_date","qty_on_hand","unit_cost","flat_fee","isupplier_name","pref_isupplier_name","usages","i_usage_id","used_date","used_qty","undefined","ingredients","setIngredients","suppliers","setSuppliers","editIngredientID","setEditIngredientID","ingredient_usage","isupplier_id","pref_isupplier_id","editFormData","setEditFormData","errorComponent","setErrorComponent","displayMsgComponent","setdisplayMsgComponent","loadingComponent","setLoadingComponent","handleError","errCode","clearError","getDBIngredients","getDBSuppliers","console","log","method","url","then","response","catch","error","status","headers","ingData","postDBIngredients","addIngredient","ingredient","lastID","length","deleteIngredient","key","ingID","updateIngredient","thisID","find","ing","handleEditFormChange","event","fieldName","target","getAttribute","fieldValue","type","checked","value","newEditFormData","updateEditForm","name","handleEditClick","handleCancelClick","map","thisKey"],"sources":["C:/Users/mcnee/OneDrive/Desktop/fft/ffreact-prod/src/Ingredients/IngredientList.js"],"sourcesContent":["import React, {Fragment, useState, useEffect, Suspense} from 'react'\r\nimport axios from 'axios'\r\nimport IngredientForm from './IngredientForm.js'\r\nimport EditableIngredientRow from './EditableIngredientRow.js'\r\nimport IngredientRow from './IngredientRow.js'\r\nimport Error from '../Error.js'\r\nimport DisplayMessage from '../DisplayMessage.js'\r\n\r\nimport './IngredientList.css'\r\n\r\n\r\n// Ingredient List Component\r\nexport default function IngredientList() {\r\n    const data = [\r\n        {i_id: 1, ingredient_name: 'Lasagna Noodles', pkg_type: 'DRY-BAG', storage_type: 'N/A', in_date: '11/20/22', in_qty: 10, unit: 'lbs', exp_date: '11-20-24', qty_on_hand: 10, unit_cost: 0.75, flat_fee: 0.00, isupplier_name: 'Second Harvest Food Bank', pref_isupplier_name: 'N/A', usages: []},\r\n        {i_id: 2, ingredient_name: 'Ground Beef', pkg_type: 'FROZEN', storage_type: 'N/A', in_date: '11/11/22', in_qty: 2, unit: 'lbs', exp_date: '12-7-22', qty_on_hand: 2, unit_cost: 0.75, flat_fee: 0.00, isupplier_name: 'Second Harvest Food Bank', pref_isupplier_name: 'N/A', usages: []},\r\n        {i_id: 3, ingredient_name: 'Ground Beef', pkg_type: 'FROZEN', storage_type: 'N/A', in_date: '11/20/22', in_qty: 5, unit: 'lbs', exp_date: '12-7-22', qty_on_hand: 5, unit_cost: 0.75, flat_fee: 0.00, isupplier_name: 'Second Harvest Food Bank', pref_isupplier_name: 'N/A', usages: [{i_usage_id: 1, used_date: '11/29/22', used_qty: 2}]}\r\n    ]\r\n\r\n    const [ingredients, setIngredients] = useState(undefined);\r\n    const [suppliers, setSuppliers] = useState(undefined);\r\n    const [editIngredientID, setEditIngredientID] = useState(null);\r\n    const [editFormData, setEditFormData] = useState({\r\n        i_id: null,\r\n        ingredient_name: \"\",\r\n        pkg_type: \"\",\r\n        storage_type: \"\",\r\n        in_date: null,\r\n        in_qty: null,\r\n        ingredient_usage: [],\r\n        qty_on_hand: null,\r\n        unit: \"\",\r\n        exp_date: null,\r\n        unit_cost: null,\r\n        flat_fee: null,\r\n        isupplier_id: null,\r\n        pref_isupplier_id: null\r\n    });\r\n    const [errorComponent, setErrorComponent] = useState(null);\r\n    const [displayMsgComponent, setdisplayMsgComponent] = useState(null);\r\n    const [loadingComponent, setLoadingComponent] = useState(null);\r\n\r\n    const handleError = (errCode) => {\r\n        if (errCode === 'DuplicateKey') {\r\n            setErrorComponent(\r\n                <Error text=\"Ingredient ID already found!\"/>\r\n            )\r\n        } \r\n        else if (errCode === 'empty') {\r\n            setErrorComponent(\r\n                <Error text=\"There doesn't seem to be any data!\"/>\r\n            )\r\n        }\r\n    }\r\n    const clearError = () => {\r\n        setErrorComponent(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDBIngredients();\r\n        getDBSuppliers();\r\n    }, []);\r\n\r\n    const getDBSuppliers = () => {\r\n        console.log(\"MAKING REQUEST TO DJANGO\")\r\n        axios({\r\n            method: \"GET\",\r\n            url:\"http://localhost:8000/api/suppliers\"\r\n          }).then((response)=>{\r\n            setSuppliers(response.data);\r\n          }).catch((error) => {\r\n            if (error.response) {\r\n              console.log(error.response);\r\n              console.log(error.response.status);\r\n              console.log(error.response.headers);\r\n              }\r\n          });\r\n    }\r\n\r\n    const getDBIngredients = () => {\r\n        console.log(\"MAKING REQUEST TO DJANGO\")\r\n        setLoadingComponent(<Error text=\"LOADING DATA...\"/>);\r\n        axios({\r\n            method: \"GET\",\r\n            url:\"http://localhost:8000/api/ingredient-inventory\"\r\n          }).then((response)=>{\r\n            const ingData = response.data\r\n            setIngredients(ingData);\r\n            setLoadingComponent(null);\r\n          }).catch((error) => {\r\n            if (error.response) {\r\n              console.log(error.response);\r\n              console.log(error.response.status);\r\n              console.log(error.response.headers);\r\n              }\r\n          });\r\n    }\r\n\r\n    const postDBIngredients = () => {\r\n        axios({\r\n            method: \"POST\",\r\n            url:\"/ingredients/\",\r\n            data: ingredients\r\n          }).then((response)=>{\r\n            getDBIngredients();\r\n          }).catch((error) => {\r\n            if (error.response) {\r\n              console.log(error.response);\r\n              console.log(error.response.status);\r\n              console.log(error.response.headers);\r\n              }\r\n          });\r\n        setdisplayMsgComponent(<DisplayMessage msg='Submitting changes to database!'/>);\r\n    }\r\n\r\n    const addIngredient = (ingredient) => {\r\n        const lastID = ingredients[ingredients.length - 1]['i_id'];\r\n        ingredient['i_id'] = lastID + 1;\r\n        axios({\r\n            method: \"POST\",\r\n            url:\"http://localhost:8000/api/ingredient-inventory/\",\r\n            data: ingredient\r\n          }).then((response)=>{\r\n            getDBIngredients();\r\n          }).catch((error) => {\r\n            if (error.response) {\r\n              console.log(error.response);\r\n              console.log(error.response.status);\r\n              console.log(error.response.headers);\r\n              }\r\n          });\r\n        clearError();\r\n        // Check to see if we already have a duplicate Ingredient Name\r\n        // if (!ingredients.find((ing) => ing.i_id === ing.i_id))\r\n        // {\r\n        //     let newIngredients = [...ingredients, ingredient];\r\n        //     setIngredients(newIngredients);\r\n        //     clearError();\r\n        // }\r\n        // else {\r\n        //     // If this ingredient is already in ingredients list, display error message\r\n        //     handleError('DuplicateKey');\r\n        // }\r\n    }\r\n\r\n    const deleteIngredient = (key) => {\r\n        const ingID = ingredients[key]['i_id']; \r\n        axios({\r\n            method: \"DELETE\",\r\n            url:\"http://localhost:8000/api/ingredient-inventory/\"+ingID+'/',\r\n          }).then((response)=>{\r\n            getDBIngredients();\r\n          }).catch((error) => {\r\n            if (error.response) {\r\n              console.log(error.response);\r\n              console.log(error.response.status);\r\n              console.log(error.response.headers);\r\n              }\r\n          });\r\n    }\r\n\r\n    const updateIngredient = (key) => {\r\n        let thisID = ingredients[key]['i_id'];\r\n        if (ingredients.find((ing) => ing.i_id === thisID))\r\n        {\r\n            setEditIngredientID(null);\r\n            axios({\r\n                method: \"PATCH\",\r\n                url:\"http://localhost:8000/api/ingredient-inventory/\"+thisID+'/',\r\n                data: editFormData\r\n              }).then((response)=>{\r\n                getDBIngredients();\r\n              }).catch((error) => {\r\n                if (error.response) {\r\n                  console.log(error.response);\r\n                  console.log(error.response.status);\r\n                  console.log(error.response.headers);\r\n                  }\r\n              });\r\n        }\r\n        else {\r\n            // If this Ingredient is already in ingredients list, display error message\r\n            handleError('DuplicateKey');\r\n        }\r\n        \r\n    }\r\n\r\n    const handleEditFormChange = (event) => {\r\n        // Get the name and value of the changed field\r\n        const fieldName = event.target.getAttribute('name');\r\n        const fieldValue = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\r\n        // Create new Ingredient object before setting state\r\n        const newEditFormData = {...editFormData};\r\n        newEditFormData[fieldName] = fieldValue;\r\n        // Set state with new ingredient object\r\n        setEditFormData(newEditFormData);\r\n    }\r\n    const updateEditForm = (name, value) => {\r\n        const newEditFormData = {...editFormData};\r\n        newEditFormData[name] = value;\r\n        setEditFormData(newEditFormData);\r\n        console.log(editFormData);\r\n      }\r\n\r\n    const handleEditClick = (key) => {\r\n        setEditIngredientID(key);\r\n        setEditFormData(ingredients[key]);\r\n    }\r\n    const handleCancelClick = () => {\r\n        setEditIngredientID(null);\r\n        setEditFormData(null);\r\n    }\r\n\r\n    if (ingredients === undefined || suppliers === undefined) {\r\n        return (<>loading</>)\r\n    }\r\n    // The HTML structure of this component\r\n    return (\r\n        /* Fragment is an invisible tag that can be used to encapsulate multiple JSX elements without changing the HTML structure of the page */\r\n        <div class='table-div'>\r\n            <table className='main-table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Ingredient Name</th>\r\n                        <th>Package Type</th>\r\n                        <th>Storage Type</th>\r\n                        <th>Date In</th>\r\n                        <th>Qty In</th>\r\n                        <th>Expiration Date</th>\r\n                        <th>Usages</th>\r\n                        <th>Qty On Hand</th>\r\n                        <th>Unit</th>\r\n                        <th>Unit Cost</th>\r\n                        <th>Flat Fee</th>\r\n                        <th>Supplier</th>\r\n                        <th>Preferred Supplier</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/* Show a row for each ingredient in ingredients.*/}\r\n                    {ingredients.map((ingredient, key) => {\r\n                        const thisKey = key;\r\n                        return(\r\n                            <Fragment>\r\n                                {\r\n                                // If this ingredient is the one to be edited, show an editable row instead\r\n                                editIngredientID === thisKey \r\n                                ? <EditableIngredientRow thisKey={thisKey} editFormData={editFormData} suppliers={suppliers} updateIngredient={updateIngredient} handleEditFormChange={handleEditFormChange} updateEditForm={updateEditForm} handleCancelClick={handleCancelClick}/>\r\n                                : <IngredientRow thisKey={thisKey} ingredient={ingredient} deleteIngredient={deleteIngredient} handleEditClick={handleEditClick}/>\r\n                                }\r\n                            </Fragment>\r\n                        );\r\n                    })}\r\n                    {/* {ingredients.length < 1 ? handleError('empty') : null} */}\r\n                </tbody>\r\n            </table>\r\n            {loadingComponent}\r\n            <h3>Add An Ingredient</h3>\r\n            <IngredientForm addIngredient={addIngredient} suppliers={suppliers}></IngredientForm>\r\n            <button onClick={postDBIngredients}>Submit Changes</button>\r\n            {errorComponent}\r\n            {displayMsgComponent}\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}