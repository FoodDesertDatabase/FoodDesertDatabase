{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\mcnee\\\\OneDrive\\\\Desktop\\\\fft\\\\ffreact-prod\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\mcnee\\\\OneDrive\\\\Desktop\\\\fft\\\\ffreact-prod\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\mcnee\\\\OneDrive\\\\Desktop\\\\fft\\\\ffreact-prod\\\\src\\\\User\\\\UserForm.js\";\nimport { useState } from 'react';\nimport AllergiesList from './AllergiesList.js';\nimport React from 'react';\n\n// Angela McNeese\n\n// User Form component\n// Takes AddUser callback function\n// Returns a form that can be used to define a new User object in a UserList\nvar UserForm = function UserForm(props) {\n  var clearUser = function clearUser() {\n    return {\n      u_id: undefined,\n      username: \"\",\n      password: \"\",\n      admin_flag: undefined,\n      email: \"\"\n\n      // hh_allergies: []\n    };\n  };\n\n  // The state of this User Form with each attribute of User, using the clearUser helper function\n  var _useState = useState(clearUser()),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1]; // Handle form submission (prevent refresh, pass User to addUser, and clear form state)\n  // Takes submit event information (form submission)\n  // Returns none\n  var handleSubmit = function handleSubmit(event) {\n    // Prevent refresh\n    event.preventDefault();\n    // Pass User object to UserList callback\n    props.addUser(user);\n    // Clear the form state\n    setUser(clearUser());\n  };\n  var updateEditForm = function updateEditForm(names, values) {\n    var newUser = _objectSpread({}, user);\n    for (var i = 0; i < names.length; i++) {\n      newUser[names[i]] = values[i];\n      // console.log('(' + names[i] + ', ' + values[i] + ')', newUser.aFlag);\n    }\n\n    setUser(newUser);\n  };\n\n  // Handle the data inputted to each form input and set the state with the new values\n  // General solution, input verification is tricky with this implementation\n  // Takes input change event information (name, type, and value)\n  // Returns None\n  var handleFormChange = function handleFormChange(event) {\n    // Get the name and value of the changed field\n    var fieldName = event.target.getAttribute('name');\n    var fieldValue = event.target.type === 'checkbox' ? +event.target.checked : event.target.value;\n    // Create new User object before setting state\n    updateEditForm([fieldName], [fieldValue]);\n    // updateEditForm('aFlag', true);\n  };\n\n  // HTML structure of this component\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Username: \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"username\",\n    id: \"username\",\n    type: \"text\",\n    value: user.username,\n    onChange: handleFormChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Password: \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    id: \"password\",\n    type: \"text\",\n    value: user.password,\n    onChange: handleFormChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"admin_flag\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"User Level: \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"admin_flag\",\n    id: \"admin_flag\",\n    type: \"number\",\n    value: user.admin_flag,\n    onChange: handleFormChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Email: \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    id: \"email\",\n    type: \"text\",\n    value: user.email,\n    onChange: handleFormChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"Submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Add\"));\n};\nexport default UserForm;","map":{"version":3,"names":["useState","AllergiesList","React","UserForm","props","clearUser","u_id","undefined","username","password","admin_flag","email","user","setUser","handleSubmit","event","preventDefault","addUser","updateEditForm","names","values","newUser","i","length","handleFormChange","fieldName","target","getAttribute","fieldValue","type","checked","value"],"sources":["C:/Users/mcnee/OneDrive/Desktop/fft/ffreact-prod/src/User/UserForm.js"],"sourcesContent":["import {useState} from 'react'\r\nimport AllergiesList from './AllergiesList.js'\r\nimport React from 'react'\r\n\r\n// Angela McNeese\r\n\r\n// User Form component\r\n// Takes AddUser callback function\r\n// Returns a form that can be used to define a new User object in a UserList\r\nconst UserForm = (props) => {\r\n\r\n    const clearUser = () => {\r\n    return {\r\n      u_id: undefined,\r\n      username: \"\",\r\n      password: \"\",\r\n      admin_flag: undefined,\r\n      email: \"\",\r\n     \r\n     // hh_allergies: []\r\n    }\r\n  }\r\n\r\n  // The state of this User Form with each attribute of User, using the clearUser helper function\r\n    const [user, setUser] = useState(clearUser());\r\n\r\n    // Handle form submission (prevent refresh, pass User to addUser, and clear form state)\r\n    // Takes submit event information (form submission)\r\n    // Returns none\r\n    const handleSubmit = (event) => {\r\n      // Prevent refresh\r\n      event.preventDefault();\r\n      // Pass User object to UserList callback\r\n        props.addUser(user)\r\n      // Clear the form state\r\n        setUser(clearUser());\r\n    }\r\n\r\n    const updateEditForm = (names, values) => {\r\n        const newUser = { ...user };\r\n      for (let i = 0; i < names.length; i++) {\r\n          newUser[names[i]] = values[i];\r\n        // console.log('(' + names[i] + ', ' + values[i] + ')', newUser.aFlag);\r\n      }\r\n        setUser(newUser);\r\n    }\r\n\r\n    // Handle the data inputted to each form input and set the state with the new values\r\n    // General solution, input verification is tricky with this implementation\r\n    // Takes input change event information (name, type, and value)\r\n    // Returns None\r\n    const handleFormChange = (event) => {\r\n      // Get the name and value of the changed field\r\n      const fieldName = event.target.getAttribute('name');\r\n      const fieldValue = event.target.type === 'checkbox' ? (+event.target.checked) : event.target.value;\r\n      // Create new User object before setting state\r\n      updateEditForm([fieldName], [fieldValue]);\r\n      // updateEditForm('aFlag', true);\r\n    }\r\n\r\n    // HTML structure of this component\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n          {/* Basic User info */}\r\n       \r\n          <label htmlFor='username'>Username: </label>\r\n            <input name='username' id=\"username\" type=\"text\" value={user.username} onChange={handleFormChange} />\r\n\r\n          <label htmlFor='password'>Password: </label>\r\n            <input name='password' id=\"password\" type=\"text\" value={user.password} onChange={handleFormChange} />\r\n\r\n          <label htmlFor='admin_flag'>User Level: </label>\r\n            <input name='admin_flag' id=\"admin_flag\" type=\"number\" value={user.admin_flag} onChange={handleFormChange} />\r\n\r\n          <label htmlFor='email'>Email: </label>\r\n            <input name='email' id=\"email\" type=\"text\" value={user.email} onChange={handleFormChange} />\r\n\r\n          <button type='Submit'>Add</button>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default UserForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}