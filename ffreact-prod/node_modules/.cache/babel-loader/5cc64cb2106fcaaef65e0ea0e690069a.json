{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\mcnee\\\\OneDrive\\\\Desktop\\\\fft\\\\ffreact-prod\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\mcnee\\\\OneDrive\\\\Desktop\\\\fft\\\\ffreact-prod\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\mcnee\\\\OneDrive\\\\Desktop\\\\fft\\\\ffreact-prod\\\\src\\\\PwResetPage.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { Fragment } from 'react';\nimport axios from 'axios';\n\n// PW Reset Page Component\n// Takes handlePageClick callback function to enable page switching when reset request is complete\n// Returns a reset request page component that allows users to enter account information \nvar PwResetPage = function PwResetPage(props) {\n  var handlePageClick = props.handlePageClick;\n  var _useState = useState({\n      username: '',\n      email: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    sendEmail = _useState2[1];\n  var sendResetRequest = function sendResetRequest() {\n    axios({\n      method: \"POST\",\n      url: \"\",\n      data: user\n    }).then(function (response) {\n      var data = response.data;\n      console.log(data);\n    }).catch(function (error) {\n      if (error.response) {\n        console.log(error.response);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      }\n    });\n  };\n\n  // Handle input change for user password reset\n  // Takes input change event information (name, value)\n  // Returns none\n  var handleResetChange = function handleResetChange(event) {\n    var fieldName = event.target.name;\n    var fieldValue = event.target.value;\n    var thisUser = _objectSpread({}, user);\n    thisUser[fieldName] = fieldValue;\n    sendEmail(thisUser); //*** Function needs to be implemented ***/\n    // Send email if account and email match\n  };\n\n  // Handle reset form submit\n  // Takes reset form event information (form submission)\n  // Returns none\n  var handleResetSubmit = function handleResetSubmit(event) {\n    // Prevent refresh\n    event.preventDefault();\n    // send reset request to backend\n    sendResetRequest();\n    // Switch to 'Login Page' page\n    handlePageClick('loginPage');\n    // TO DO;\n  };\n\n  // HTML structure of this component\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Password Reset Page\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleResetSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Username: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    maxLength: \"30\",\n    name: \"username\",\n    value: user.username,\n    onChange: handleResetChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 22\n    }\n  }, \"Email: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    maxLength: \"30\",\n    name: \"email\",\n    value: user.email,\n    onChange: handleResetChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"Submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 27\n    }\n  }, \"Submit\")));\n};\nexport default PwResetPage;","map":{"version":3,"names":["React","useState","Fragment","axios","PwResetPage","props","handlePageClick","username","email","user","sendEmail","sendResetRequest","method","url","data","then","response","console","log","catch","error","status","headers","handleResetChange","event","fieldName","target","name","fieldValue","value","thisUser","handleResetSubmit","preventDefault"],"sources":["C:/Users/mcnee/OneDrive/Desktop/fft/ffreact-prod/src/PwResetPage.js"],"sourcesContent":["import React from 'react'\r\nimport {useState} from 'react'\r\nimport {Fragment} from 'react'\r\nimport axios from 'axios'\r\n\r\n// PW Reset Page Component\r\n// Takes handlePageClick callback function to enable page switching when reset request is complete\r\n// Returns a reset request page component that allows users to enter account information \r\nconst PwResetPage = (props) => {\r\n    const handlePageClick = props.handlePageClick;\r\n    const [user, sendEmail] = useState(\r\n        {\r\n            username: '',\r\n            email: ''\r\n        }\r\n    );\r\n\r\n    const sendResetRequest = () => {\r\n        axios({\r\n            method: \"POST\",\r\n            url:\"\",\r\n            data: user\r\n          }).then((response)=>{\r\n            const data = response.data;\r\n            console.log(data);\r\n          }).catch((error) => {\r\n            if (error.response) {\r\n              console.log(error.response);\r\n              console.log(error.response.status);\r\n              console.log(error.response.headers);\r\n              }\r\n          });\r\n    }\r\n\r\n    // Handle input change for user password reset\r\n    // Takes input change event information (name, value)\r\n    // Returns none\r\n    const handleResetChange = (event) => {\r\n        const fieldName = event.target.name;\r\n        const fieldValue = event.target.value;\r\n        const thisUser = {...user};\r\n        thisUser[fieldName] = fieldValue;\r\n        sendEmail(thisUser);                                //*** Function needs to be implemented ***/\r\n// Send email if account and email match\r\n    }\r\n    \r\n    // Handle reset form submit\r\n    // Takes reset form event information (form submission)\r\n    // Returns none\r\n    const handleResetSubmit = (event) => {\r\n        // Prevent refresh\r\n        event.preventDefault();\r\n        // send reset request to backend\r\n        sendResetRequest();\r\n        // Switch to 'Login Page' page\r\n        handlePageClick('loginPage');\r\n        // TO DO;\r\n    }\r\n    \r\n    // HTML structure of this component\r\n    return (\r\n        <Fragment>\r\n            <h3>Password Reset Page</h3>\r\n            <form onSubmit={handleResetSubmit}>\r\n                <label htmlFor='username'>Username: </label>\r\n                <input type='text' maxLength='30' name='username' value={user.username} onChange={handleResetChange}></input>\r\n                <br/><label htmlFor='username'>Email: </label>\r\n                <input type='email' maxLength='30' name='email' value={user.email} onChange={handleResetChange}></input>\r\n                <br/><br/><button type='Submit'>Submit</button>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default PwResetPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}