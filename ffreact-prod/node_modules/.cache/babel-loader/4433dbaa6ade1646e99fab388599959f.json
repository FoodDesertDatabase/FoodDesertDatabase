{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\mcnee\\\\OneDrive\\\\Desktop\\\\fft\\\\ffreact-prod\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mcnee\\\\OneDrive\\\\Desktop\\\\fft\\\\ffreact-prod\\\\src\\\\Ingredients\\\\IngredientReport.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport IngredientForm from './IngredientForm.js';\nimport EditableIngredientRow from './EditableIngredientRow.js';\nimport IngredientRow from './IngredientRow.js';\nimport ReusableTable from '../ReusableTable.js';\nimport Error from '../Error.js';\nimport DisplayMessage from '../DisplayMessage.js';\nimport './IngredientList.css';\n\n// Ingredient List Component\nexport default function IngredientList() {\n  var _useState = useState(undefined),\n    _useState2 = _slicedToArray(_useState, 2),\n    ingredients = _useState2[0],\n    setIngredients = _useState2[1];\n  useEffect(function () {\n    getDBIngredients();\n  }, []);\n  var getDBIngredients = function getDBIngredients() {\n    axios({\n      method: \"GET\",\n      url: \"http://localhost:8000/api/ingredients-report\"\n    }).then(function (response) {\n      var iData = response.data;\n      setIngredients(iData);\n    }).catch(function (error) {\n      if (error.response) {\n        console.log(error.response);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      }\n    });\n  };\n  if (ingredients === undefined) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \"loading\");\n  }\n\n  // The HTML structure of this component\n  return (\n    /*#__PURE__*/\n    /* Fragment is an invisible tag that can be used to encapsulate multiple JSX elements without changing the HTML structure of the page */\n    React.createElement(\"div\", {\n      className: \"table-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ReusableTable, {\n      data: ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }))\n  );\n}","map":{"version":3,"names":["React","Fragment","useState","useEffect","axios","IngredientForm","EditableIngredientRow","IngredientRow","ReusableTable","Error","DisplayMessage","IngredientList","undefined","ingredients","setIngredients","getDBIngredients","method","url","then","response","iData","data","catch","error","console","log","status","headers"],"sources":["C:/Users/mcnee/OneDrive/Desktop/fft/ffreact-prod/src/Ingredients/IngredientReport.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport IngredientForm from './IngredientForm.js'\r\nimport EditableIngredientRow from './EditableIngredientRow.js'\r\nimport IngredientRow from './IngredientRow.js'\r\nimport ReusableTable from '../ReusableTable.js'\r\nimport Error from '../Error.js'\r\nimport DisplayMessage from '../DisplayMessage.js'\r\n\r\nimport './IngredientList.css'\r\n\r\n\r\n// Ingredient List Component\r\nexport default function IngredientList() {\r\n\r\n    const [ingredients, setIngredients] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        getDBIngredients();\r\n    }, []);\r\n\r\n    const getDBIngredients = () => {\r\n        axios({\r\n            method: \"GET\",\r\n            url: \"http://localhost:8000/api/ingredients-report\"\r\n        }).then((response) => {\r\n            const iData = response.data\r\n            setIngredients(iData);\r\n        }).catch((error) => {\r\n            if (error.response) {\r\n                console.log(error.response);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            }\r\n        });\r\n    }\r\n\r\n    if (ingredients === undefined) {\r\n        return (<>loading</>);\r\n    }\r\n\r\n    // The HTML structure of this component\r\n    return (\r\n        /* Fragment is an invisible tag that can be used to encapsulate multiple JSX elements without changing the HTML structure of the page */\r\n        <div className='table-div'>\r\n            {/* Show a row for each ingredient in ingredients.*/}\r\n            <ReusableTable data={ingredients} />\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC5D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,qBAAqB;AAChD,OAAOC,qBAAqB,MAAM,4BAA4B;AAC9D,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,aAAa,MAAM,qBAAqB;AAC/C,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,cAAc,MAAM,sBAAsB;AAEjD,OAAO,sBAAsB;;AAG7B;AACA,eAAe,SAASC,cAAc,GAAG;EAAA,gBAECT,QAAQ,CAACU,SAAS,CAAC;IAAA;IAAlDC,WAAW;IAAEC,cAAc;EAElCX,SAAS,CAAC,YAAM;IACZY,gBAAgB,EAAE;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAS;IAC3BX,KAAK,CAAC;MACFY,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE;IACT,CAAC,CAAC,CAACC,IAAI,CAAC,UAACC,QAAQ,EAAK;MAClB,IAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAI;MAC3BP,cAAc,CAACM,KAAK,CAAC;IACzB,CAAC,CAAC,CAACE,KAAK,CAAC,UAACC,KAAK,EAAK;MAChB,IAAIA,KAAK,CAACJ,QAAQ,EAAE;QAChBK,OAAO,CAACC,GAAG,CAACF,KAAK,CAACJ,QAAQ,CAAC;QAC3BK,OAAO,CAACC,GAAG,CAACF,KAAK,CAACJ,QAAQ,CAACO,MAAM,CAAC;QAClCF,OAAO,CAACC,GAAG,CAACF,KAAK,CAACJ,QAAQ,CAACQ,OAAO,CAAC;MACvC;IACJ,CAAC,CAAC;EACN,CAAC;EAED,IAAId,WAAW,KAAKD,SAAS,EAAE;IAC3B,oBAAQ,oDAAY;EACxB;;EAEA;EACA;IAAA;IACI;IACA;MAAK,SAAS,EAAC,WAAW;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAEtB,oBAAC,aAAa;MAAC,IAAI,EAAEC,WAAY;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG;EAClC;AAEd"},"metadata":{},"sourceType":"module"}